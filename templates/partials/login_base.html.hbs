{{#*inline "page"}}
<div class="login_container">
    <div class="container__form container--signup">
      <!--<form action="#" class="form" id="form1"><!-->
        <div class="form">
        <h2 class="form__title">注册</h2>
        <input type="text" placeholder="请输入用户名" class="input" id="username_r" />
        <input type="password" placeholder="请输入密码" class="input" id="pwd_r" />
        <input type="text" placeholder="请输入联系电话，选填" class="input" id="pno_r" />
        <input type="email" placeholder="请输入邮箱，选填" class="input" id="email_r" />
        <div class="input_box">
          <label for="usertype" style="color: black;">选择用户类型:</label>
    <select id="usertype_r" name="usertype">
      <option value="tenant">租户</option>
      <option value="resident">房主</option>
      <!--
      <option value="employee">员工</option>
      <option value="admin">管理员</option>
      <-->
    </select>


        </div>
        <button class="btn" onclick="apply()">提交</button>
     <!-- </form><!-->
     </div>
      <div  class="msg"style="display:none;" id="msg"><label>用户名密码错误</label></div>
    </div>

    <!-- Sign In -->
    <div class="container__form container--signin">
      <!-- <form action="#" class="form" id="form2"> <!-->
        <div class="form">
        <h2 class="form__title">登录</h2>
        <input type="text" placeholder="请输入用户名" class="input" id="username_l" />
        <input type="password" placeholder="请输入密码" class="input"  id="pwd_l" />
        <!--<a href="#" class="link">Forgot your password?</a> <!-->
        <div class="input_box">
            <label for="usertype" style="color: black;">选择用户类型:</label>
      <select id="usertype_l" name="usertype">
        <option value="tenant">租户</option>
        <option value="resident">房主</option>
        <option value="employee">员工</option>
        <option value="admin">管理员</option>
      </select>


          </div>
        <button class="btn" onclick="login()">提交</button>
     <!-- </form> <!-->
     </div>
      <div  class="msg" style="display:none;" id="msg2"><label>用户名密码错误</label></div>
    </div>

    <!-- Overlay -->
    <div class="container__overlay">
      <div class="overlay">
        <div class="overlay__panel overlay--left">
          <button class="btn" id="signIn">Sign In</button>
        </div>
        <div class="overlay__panel overlay--right">
          <button class="btn" id="signUp">Sign Up</button>
        </div>
      </div>
    </div>
  </div>
</div>

  <script>
    const signInBtn = document.getElementById("signIn");
    const signUpBtn = document.getElementById("signUp");
    const fistForm = document.getElementById("form1");
    const secondForm = document.getElementById("form2");
    const container = document.querySelector(".login_container");
    /* default value: register */
    {{~> login_or_register}}

    signInBtn.addEventListener("click", () => {
      container.classList.remove("right-panel-active");
      window.location.href = "/login";
    });

    signUpBtn.addEventListener("click", () => {
      container.classList.add("right-panel-active");
      window.location.href = "/register";
    });

    //fistForm.addEventListener("submit", (e) => e.preventDefault());
    //secondForm.addEventListener("submit", (e) => e.preventDefault());

  </script>
  <style>
    :root {
      /* COLORS */
      --white: #e9e9e9;
      --gray: #333;
      --blue: #0367a6;
      --lightblue: #008997;

      /* RADII */
      --button-radius: 0.7rem;

      /* SIZES */
      --max-width: 758px;
      --max-height: 420px;

      font-size: 16px;
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
        Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
    }


   body {
      align-items: center;
      background-color: var(--white);
      background: url("https://res.cloudinary.com/dbhnlktrv/image/upload/v1599997626/background_oeuhe7.jpg");
      /* 决定背景图像的位置是在视口内固定，或者随着包含它的区块滚动。
       https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-attachment */
      background-attachment: fixed;
      background-position: center;
      background-repeat: no-repeat;
      background-size: cover;

      display:block;

      height: 100vh;
      place-items: center;

    }

    .form__title {
      font-weight: 300;
      margin: 0;
      margin-bottom: 1.25rem;
    }

    .link {
      color: var(--gray);
      font-size: 0.9rem;
      margin: 1.5rem 0;
      text-decoration: none;
    }

    .login_container {
      background-color: var(--white);
      border-radius: var(--button-radius);
      box-shadow: 0 0.9rem 1.7rem rgba(0, 0, 0, 0.25),
        0 0.7rem 0.7rem rgba(0, 0, 0, 0.22);
      height: var(--max-height);
      max-width: var(--max-width);
      overflow: hidden;
      position:fixed;
      margin: 10% 10% 0 25%;
      width: 100%;
    }

    .container__form {
      height: 100%;
      position: absolute;
      top: 0;
      transition: all 0.6s ease-in-out;
    }

    .container--signin {
      left: 0;
      width: 50%;
      z-index: 2;
    }

    .login_container.right-panel-active .container--signin {
      transform: translateX(100%);
    }

    .container--signup {
      left: 0;
      opacity: 0;
      width: 50%;
      z-index: 1;
    }

    .login_container.right-panel-active .container--signup {
      animation: show 0.6s;
      opacity: 1;
      transform: translateX(100%);
      z-index: 5;
    }

    .container__overlay {
      height: 100%;
      left: 50%;
      overflow: hidden;
      position: absolute;
      top: 0;
      transition: transform 0.6s ease-in-out;
      width: 50%;
      z-index: 100;
    }

    .login_container.right-panel-active .container__overlay {
      transform: translateX(-100%);
    }

    .overlay {
      background-color: var(--lightblue);
      background: url("https://cdn.pixabay.com/photo/2018/08/14/13/23/ocean-3605547_1280.jpg");
      background-attachment: fixed;
      background-position: center;
      background-repeat: no-repeat;
      background-size: cover;
      height: 100%;
      left: -100%;
      position: relative;
      transform: translateX(0);
      transition: transform 0.6s ease-in-out;
      width: 200%;
    }

    .login_container.right-panel-active .overlay {
      transform: translateX(50%);
    }

    .overlay__panel {
      align-items: center;
      display: flex;
      flex-direction: column;
      height: 100%;
      justify-content: center;
      position: absolute;
      text-align: center;
      top: 0;
      transform: translateX(0);
      transition: transform 0.6s ease-in-out;
      width: 50%;
    }

    .overlay--left {
      transform: translateX(-20%);
    }

    .login_container.right-panel-active .overlay--left {
      transform: translateX(0);
    }

    .overlay--right {
      right: 0;
      transform: translateX(0);
    }

    .login_container.right-panel-active .overlay--right {
      transform: translateX(20%);
    }

    .btn {
      background-color: var(--blue);
      background-image: linear-gradient(90deg, var(--blue) 0%, var(--lightblue) 74%);
      border-radius: 20px;
      border: 1px solid var(--blue);
      color: var(--white);
      cursor: pointer;
      font-size: 0.8rem;
      font-weight: bold;
      letter-spacing: 0.1rem;
      padding: 0.9rem 4rem;
      text-transform: uppercase;
      transition: transform 80ms ease-in;
    }

    .form>.btn {
      margin-top: 1.5rem;
    }

    .btn:active {
      transform: scale(0.95);
    }

    .btn:focus {
      outline: none;
    }

    .form {
      background-color: var(--white);
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      padding: 0 3rem;
      height: 100%;
      text-align: center;
    }

    .input {
      background-color: #fff;
      border: none;
      padding: 0.9rem 0.9rem;
      margin: 0.5rem 0;
      width: 100%;
    }

    @keyframes show {

      0%,
      49.99% {
        opacity: 0;
        z-index: 1;
      }

      50%,
      100% {
        opacity: 1;
        z-index: 5;
      }
    }
  </style>
  <script>

  let PUBLICKEY=`{{public_key}}`;

function apply()
{
    let msg=document.getElementById("msg");
    if(document.getElementById("username_r").value=="")
    {
        msg.style.display="block";
        msg.innerText="用户名不能为空";
        return;
    }
    if(document.getElementById("pwd_r").value=="")
    {
        msg.style.display="block";
        msg.innerText="密码不能为空";
        return;
    }
    let username = document.getElementById("username_r").value;
    let password = document.getElementById("pwd_r").value;
    let pno=document.getElementById('pno_r').value;
    let email=document.getElementById('email_r').value;
    let usertype=document.getElementById('usertype_r').value;

    let encrypt=new JSEncrypt();
    encrypt.setPublicKey(PUBLICKEY);
    let encrypted=encrypt.encrypt(password);


    // 构建包含用户名和密码的对象
    let data = {
      username: username,
      password: password,
      pno:pno,
      email:email,
      usertype:usertype
    };

    console.log(data)
    // 发送 POST 请求
    fetch('/register', {
      method: 'POST',

      headers: {
        'Content-Type': 'application/json'
      },
      /*mode:'no-cors',*/
      body: JSON.stringify(data)
    })
    .then(response => {
        if (!response.ok) {
          throw new Error('网络请求失败');
        }
        return response.json(); // 将响应转为 JSON
      })
      .then(data => {
        console.log(data);
        // 根据后端返回的数据结构处理
        if (data.jieguo === true) {
          console.log('注册成功:', data);
          // 在这里可以显示成功消息或跳转到另一个页面
          msg.style.display="block";
          msg.innerText="注册成功";
          msg.style.color='green';
        } else {
          //console.error('注册失败:', data);
          // 在这里可以处理注册失败的情况，例如显示错误消息
          alert('注册失败，请重试！' + data.reason);
        }
      })
      .catch(error => {
        console.error('注册失败:', error);
        // 在这里可以处理请求失败的情况，例如显示错误消息
        alert('注册失败，请检查网络连接！' + error);
        return;
      });


}

function login()
{
    let msg2=document.getElementById("msg2");
    if(document.getElementById("username_l").value=="")
    {
        msg2.style.display="block";
        msg2.innerText="用户名不能为空";
        return;
    }
    if(document.getElementById("pwd_l").value=="")
    {
        msg2.style.display="block";
        msg2.innerText="密码不能为空";
        return;
    }
    let username = document.getElementById("username_l").value;
    let password = document.getElementById("pwd_l").value;
    let usertype=document.getElementById('usertype_l').value;
    let encrypt=new JSEncrypt();
    encrypt.setPublicKey(PUBLICKEY);
    let encrypted=encrypt.encrypt(password);

    // 构建包含用户名和密码的对象
    let data = {
      username: username,
      password:password,
      usertype:usertype
    };

    console.log(data)
    // 发送 POST 请求
    fetch('/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    })

    .then(response => {
        if (!response.ok) {
          throw new Error('网络请求失败');
        }
        return response.json(); // 将响应转为 JSON
      })
      .then(data => {
        // 根据后端返回的数据结构处理
        if (data.jieguo=== true) {
          console.log('登录成功:', data);
          // 在这里可以显示成功消息或跳转到另一个页面

          msg2.innerText="登录成功";
          msg2.style.color='green';
          //window.location.href="./"+usertype+"page.html";
    let  redirectTo = "./"+usertype+"page.html";
    redirectTo += "?username=" + encodeURIComponent(username);
    //redirectTo += "&phoneNumber=" + encodeURIComponent(phoneNumber);

    // 跳转到租赁页面
    window.location.href = redirectTo;
        } else {
          console.error('登录失败:', data.reason);
          // 在这里可以处理注册失败的情况，例如显示错误消息
          alert('登录失败，请重试！' + data.reason);
        }
      })
      .catch(error => {
        console.error('登录失败:', error);
        // 在这里可以处理请求失败的情况，例如显示错误消息
        alert('登录失败，请检查网络连接！');

        return;
      });
}
  </script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jsencrypt/3.3.2/jsencrypt.min.js"></script>
{{/inline}}
{{> partials/base}}
